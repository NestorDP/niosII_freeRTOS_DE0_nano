
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE0Nano_FreeRTOS(

	//////////// CLOCK //////////
	CLOCK_50,

	//////////// LED //////////
	LED,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N,

	//////////// EPCS //////////
	EPCS_ASDO,
	EPCS_DATA0,
	EPCS_DCLK,
	EPCS_NCSO,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	GPIO_0,
	GPIO_1
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;

//////////// LED //////////
output		     [7:0]		LED;

//////////// KEY //////////
input 		     [1:0]		KEY;

//////////// SW //////////
input 		     [3:0]		SW;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
inout 		    [15:0]		DRAM_DQ;
output		     [1:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;

//////////// EPCS //////////
output		         EPCS_ASDO;
input 		   EPCS_DATA0;
output		   EPCS_DCLK;
output		   EPCS_NCSO;

//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////

inout [33:0]   GPIO_0;
inout [33:0]	GPIO_1;


//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================
    niosII u0 (
        .clk_clk            (CLOCK_50),            //         clk.clk
        .epcs_dclk          (EPCS_DCLK),          	//        epcs.dclk
        .epcs_sce           (EPCS_NCSO),           //        epcs.sce
        .epcs_sdo           (EPCS_ASDO),           //        epcs.sdo
        .epcs_data0         (EPCS_DATA0),         	//        epcs.data0
        .port_led_export    (LED),    					//    port_led.export
        .port_key_export    (KEY),    					//    port_key.export
        .port_sw_export     (SW),     					//     port_sw.export
        .port_gpio_0_export (GPIO_1[31:0]), 			// port_gpio_0.export
		  .ram_clk_clk        (DRAM_CLK),         	//     ram_clk.clk
        .reset_reset_n      (1'b1),      				//       reset.reset_n	  
        .uart_rxd           (GPIO_0[32]),          //        uart.rxd
        .uart_txd           (GPIO_0[33]),          //        uart.txd
        .sdram_addr         (DRAM_ADDR),         	//       sdram.addr
        .sdram_ba           (DRAM_BA),           	//       sdram.ba
        .sdram_cas_n        (DRAM_CAS_N),        	//       sdram.cas_n
        .sdram_cke          (DRAM_CKE),          	//       sdram.cke
        .sdram_cs_n         (DRAM_CS_N),         	//       sdram.cs_n
        .sdram_dq           (DRAM_DQ),           	//       sdram.dq
        .sdram_dqm          (DRAM_DQM),          	//       sdram.dqm
        .sdram_ras_n        (DRAM_RAS_N),        	//       sdram.ras_n
        .sdram_we_n         (DRAM_WE_N),         	//       sdram.we_n
		  .spi_MISO           (GPIO_0[08]),          //         spi.MISO
        .spi_MOSI           (GPIO_0[10]),          //         spi.MOSI
        .spi_SCLK           (GPIO_0[12]),          //         spi.SCLK
        .spi_SS_n           (GPIO_0[14])           //      .
    );
	 


	 
	 
endmodule
